import java.util.Scanner;

public class DecimalToFraction {
    public static void main(String[] args) {
        try (Scanner input = new Scanner(System.in)) {
            System.out.print("Enter a decimal number: ");
            String decimalStr = input.nextLine().trim();
            
            // Check if the decimal number is negative
            boolean isNegative = decimalStr.startsWith("-");
            if (isNegative) {
                decimalStr = decimalStr.substring(1); // Remove the negative sign
            }
            
            // Extract integer and fractional parts
            int integerPart = Integer.parseInt(decimalStr.split("\\.")[0]);
            String fractionalPart = decimalStr.split("\\.")[1];
            
            // Calculate the denominator based on the number of decimal places
            int denominator = (int) Math.pow(10, fractionalPart.length());
            
            // Calculate the numerator
            int numerator = Integer.parseInt(fractionalPart) + integerPart * denominator;
            
            if (isNegative) {
                numerator = -numerator;
            }
            
            // Find the greatest common divisor and simplify the fraction
            int gcd = gcd(Math.abs(numerator), denominator);
            numerator /= gcd;
            denominator /= gcd;
            
            System.out.println("The fraction number is " + numerator + "/" + denominator);
        }
    }

    // Method to find the greatest common divisor using Euclidean algorithm
    public static int gcd(int a, int b) {
        if (b == 0) {
            return a;
        }
        return gcd(b, a % b);
    }
}
