/** 
*This program validates credit card numbers using the Luhn algorithm
* Module1_ProgrammingAssignment_2
* Brianna Manning
* 8/25/2024
*/
import java.util.Scanner;

public class CreditCardValidation {
    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        
        System.out.print("Enter a credit card number as a long integer: ");
        String creditCardNumber = input.nextLine();
        
        if (isValid(creditCardNumber)) {
            System.out.println(creditCardNumber + " is valid.");
        } else {
            System.out.println(creditCardNumber + " is invalid.");
        }
        
        input.close();
    }
    
    public static boolean isValid(String number) {
        int total = sumOfDoubleEvenPlace(number) + sumOfOddPlace(number);
        return (total % 10 == 0);
    }
    
    public static int sumOfDoubleEvenPlace(String number) {
        int sum = 0;
        
        for (int i = number.length() - 2; i >= 0; i -= 2) {
            int digit = Character.getNumericValue(number.charAt(i));
            sum += getDigit(digit * 2);
        }
        
        return sum;
    }
    
    public static int getDigit(int number) {
        return number < 10 ? number : (number % 10) + (number / 10);
    }
    
    public static int sumOfOddPlace(String number) {
        int sum = 0;
        
        for (int i = number.length() - 1; i >= 0; i -= 2) {
            int digit = Character.getNumericValue(number.charAt(i));
            sum += digit;
        }
        
        return sum;
    }
}
